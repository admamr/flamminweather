{"version":3,"sources":["FlamminWeather.js","App.js","reportWebVitals.js","index.js"],"names":["FlamminWeather","city","setCity","useState","weather","setWeather","backgroundVideo","setBackgroundVideo","fetchWeather","async","response","axios","get","data","error","_error$response","console","getBackgroundVideo","process","mainWeather","main","toLowerCase","includes","React","createElement","className","autoPlay","loop","muted","key","src","type","placeholder","value","onChange","e","target","onKeyPress","event","onClick","name","sys","country","temp","humidity","description","App","reportWebVitals","onPerfEntry","Function","then","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"wQAuFeA,MAnFQA,KACrB,MAAOC,EAAMC,GAAWC,mBAAS,KAC1BC,EAASC,GAAcF,mBAAS,OAChCG,EAAiBC,GAAsBJ,mBAC5C,uCAIIK,EAAeC,UACnB,GAAKR,EACL,IACE,MAAMS,QAAiBC,IAAMC,IAC3B,qDAAqDX,yDAEvDI,EAAWK,EAASG,MACpB,MAAOC,GAAQ,IAADC,EACdC,QAAQF,MACN,+BACc,QAAdC,EAAAD,EAAMJ,gBAAQ,IAAAK,OAAA,EAAdA,EAAgBF,OAAQC,GAE1BT,EAAW,QAUTY,EAAqBA,KACzB,IAAKb,EAAS,MAAOc,sCACrB,MAAMC,EAAcf,EAAQA,QAAQ,GAAGgB,KAAKC,cAC5C,OAAIF,EAAYG,SAAS,SAChBJ,qCACLC,EAAYG,SAAS,QAChBJ,oCACLC,EAAYG,SAAS,SAChBJ,oCACLC,EAAYG,SAAS,QAChBJ,oCACFA,uCAGT,OACEK,IAAAC,cAAA,OAAKC,UAAU,qBAEbF,IAAAC,cAAA,SACEE,UAAQ,EACRC,MAAI,EACJC,OAAK,EACLH,UAAU,mBACVI,IAAKZ,KAELM,IAAAC,cAAA,UAAQM,IAAKb,IAAsBc,KAAK,eAI1CR,IAAAC,cAAA,OAAKC,UAAU,mBACbF,IAAAC,cAAA,UAAI,mBACJD,IAAAC,cAAA,SACEO,KAAK,OACLC,YAAY,aACZC,MAAOhC,EACPiC,SAAWC,GAAMjC,EAAQiC,EAAEC,OAAOH,OAClCI,WAzCgBC,IACJ,UAAdA,EAAMT,KACRrB,OAyCEe,IAAAC,cAAA,UAAQe,QAAS/B,GAAc,eAC9BJ,GACCmB,IAAAC,cAAA,OAAKC,UAAU,gBACbF,IAAAC,cAAA,UACGpB,EAAQoC,KAAK,KAAGpC,EAAQqC,IAAIC,SAE/BnB,IAAAC,cAAA,SAAG,gBAAcpB,EAAQgB,KAAKuB,KAAK,SACnCpB,IAAAC,cAAA,SAAG,aAAWpB,EAAQgB,KAAKwB,SAAS,KACpCrB,IAAAC,cAAA,SAAG,cAAYpB,EAAQA,QAAQ,GAAGyC,iBCpE/BC,MARf,WACE,OACEvB,IAAAC,cAAA,OAAKC,UAAU,OACbF,IAAAC,cAACxB,EAAc,QCMN+C,MAZSC,IAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,KAAKC,IAAkD,IAAjD,OAAEC,EAAM,OAAEC,EAAM,OAAEC,EAAM,OAAEC,EAAM,QAAEC,GAASL,EACpEC,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAOP,GACPQ,EAAQR,MCDDS,IAASC,WAAWC,SAASC,eAAe,SACpDC,OACHtC,IAAAC,cAACD,IAAMuC,WAAU,KACfvC,IAAAC,cAACsB,EAAG,QAORC,M","file":"static/js/main.29531994.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport \"./FlamminWeather.css\";\n\nconst FlamminWeather = () => {\n  const [city, setCity] = useState(\"\");\n  const [weather, setWeather] = useState(null);\n  const [backgroundVideo, setBackgroundVideo] = useState(\n    `${process.env.PUBLIC_URL}/weather/default.mp4`\n  );\n  const API_KEY = \"adb885fffc5e595767dbd3303d0a3cd4\";\n\n  const fetchWeather = async () => {\n    if (!city) return;\n    try {\n      const response = await axios.get(\n        `https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${API_KEY}&units=metric`\n      );\n      setWeather(response.data);\n    } catch (error) {\n      console.error(\n        \"Error fetching weather data\",\n        error.response?.data || error\n      );\n      setWeather(null);\n    }\n  };\n\n  const handleKeyPress = (event) => {\n    if (event.key === \"Enter\") {\n      fetchWeather();\n    }\n  };\n\n  const getBackgroundVideo = () => {\n    if (!weather) return process.env.PUBLIC_URL + \"/weather/default.mp4\";\n    const mainWeather = weather.weather[0].main.toLowerCase();\n    if (mainWeather.includes(\"cloud\"))\n      return process.env.PUBLIC_URL + \"/weather/cloudy.mp4\";\n    if (mainWeather.includes(\"rain\"))\n      return process.env.PUBLIC_URL + \"/weather/rainy.mp4\";\n    if (mainWeather.includes(\"clear\"))\n      return process.env.PUBLIC_URL + \"/weather/sunny.mp4\";\n    if (mainWeather.includes(\"snow\"))\n      return process.env.PUBLIC_URL + \"/weather/snowy.mp4\";\n    return process.env.PUBLIC_URL + \"/weather/default.mp4\";\n  };\n\n  return (\n    <div className=\"weather-container\">\n      {/* Video Background */}\n      <video\n        autoPlay\n        loop\n        muted\n        className=\"background-video\"\n        key={getBackgroundVideo()}\n      >\n        <source src={getBackgroundVideo()} type=\"video/mp4\" />\n      </video>\n\n      {/* Weather UI */}\n      <div className=\"weather-content\">\n        <h1>Flammin Weather</h1>\n        <input\n          type=\"text\"\n          placeholder=\"Enter city\"\n          value={city}\n          onChange={(e) => setCity(e.target.value)}\n          onKeyPress={handleKeyPress}\n        />\n        <button onClick={fetchWeather}>Get Weather</button>\n        {weather && (\n          <div className=\"weather-info\">\n            <h2>\n              {weather.name}, {weather.sys.country}\n            </h2>\n            <p>Temperature: {weather.main.temp}Â°C</p>\n            <p>Humidity: {weather.main.humidity}%</p>\n            <p>Condition: {weather.weather[0].description}</p>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default FlamminWeather;\n","import React from \"react\";\nimport FlamminWeather from \"./FlamminWeather\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <FlamminWeather />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}